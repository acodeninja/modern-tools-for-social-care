name: Destroy Services

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Confirm destruction of the whole system'
        required: true
        type: boolean
      environment:
        description: 'The environment to destroy'
        required: true
        type: choice
        options:
          - Production
          - Staging
          - Testing

jobs:
  get-services:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.services.outputs.result }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/github-script@v6
        id: services
        with:
          github-token: '09134yv0b-193'
          script: |
            const path = require('path');
            const fs = require('fs');
            const services = fs.readdirSync(path.resolve(process.cwd(), 'src', 'services'))
            return services;

  destroy-services:
    runs-on: ubuntu-latest
    name: destroy service ${{ matrix.service }} (${{ github.event.inputs.environment }})
    environment: ${{ github.event.inputs.environment }}
    concurrency: destroy-service-${{ matrix.service }}-${{ github.event.inputs.environment }}
    if:  ${{ github.event.inputs.confirmation }}
    env:
      DEPLOY_TARGET: ${{ github.event.inputs.environment }}
    needs: [ get-services ]
    strategy:
      matrix:
        service: ${{ fromJSON(needs.get-services.outputs.services) }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2
      - run: |
          terraform init \
            -backend-config="bucket=$TF_STATE_BUCKET" \
            -backend-config="key=$TF_STATE_KEY" \
            -backend-config="region=$TF_STATE_REGION"
        working-directory: src/services/${{ matrix.service }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}/${{ matrix.service }}.tfstate
          TF_STATE_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_VAR_environment: ${{ secrets.ENVIRONMENT }}
          TF_VAR_system: ${{ secrets.SYSTEM }}
      - run: |
          terraform plan -destroy \
            -var-file ../../../environments/config.tfvars \
            -var-file "../../../environments/$DEPLOY_TARGET/config.tfvars"
        working-directory: src/services/${{ matrix.service }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}/${{ matrix.service }}.tfstate
          TF_STATE_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_VAR_environment: ${{ secrets.ENVIRONMENT }}
          TF_VAR_system: ${{ secrets.SYSTEM }}

  destroy-infrastructure:
    runs-on: ubuntu-latest
    name: destroy infrastructure (${{ github.event.inputs.environment }})
    environment: ${{ github.event.inputs.environment }}
    needs: [ destroy-services ]
    concurrency: destroy-infrastructure-${{ github.event.inputs.environment }}
    env:
      DEPLOY_TARGET: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2
      - run: |
          terraform init \
            -backend-config="bucket=$TF_STATE_BUCKET" \
            -backend-config="key=$TF_STATE_KEY" \
            -backend-config="region=$TF_STATE_REGION"
        working-directory: ./src/infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}
          TF_STATE_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_VAR_environment: ${{ secrets.ENVIRONMENT }}
          TF_VAR_system: ${{ secrets.SYSTEM }}
      - run: |
          terraform plan -destroy \
            -var-file ../../environments/config.tfvars \
            -var-file "../../environments/$DEPLOY_TARGET/config.tfvars"
        working-directory: ./src/infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}
          TF_STATE_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TF_VAR_environment: ${{ secrets.ENVIRONMENT }}
          TF_VAR_system: ${{ secrets.SYSTEM }}
