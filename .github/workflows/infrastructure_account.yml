name: 'Infrastructure: Account'

on:
  push:
    branches:
      - main
      - dev
    paths:
      - .github/workflow/infrastructure_account.yml
      - src/infrastructure/**
      - src/*/*/infrastructure/account/**
  pull_request:
    paths:
      - .github/workflow/infrastructure_account.yml
      - src/infrastructure/**
      - src/*/*/infrastructure/account/**

jobs:
  lint:
    runs-on: ubuntu-latest
    environment: Testing
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - run: terraform fmt -recursive -check
        working-directory: src/infrastructure
      - run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ secrets.AWS_DEFAULT_REGION }}"
        working-directory: src/infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - uses: terraform-linters/setup-tflint@v1
      - run: |
          tflint --init
          tflint -f compact


  deploy-testing:
    runs-on: ubuntu-latest
    environment: Testing
#    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    needs:
      - lint
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ secrets.AWS_DEFAULT_REGION }}"
        working-directory: src/infrastructure
      - run: |
          TF_VAR_environment=${{ secrets.ENVIRONMENT }} \
          TF_VAR_system=${{ secrets.SYSTEM }} \
          terraform apply -auto-approve
        working-directory: src/infrastructure
